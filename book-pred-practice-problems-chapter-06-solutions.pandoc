<style>
table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {background-color: #f2f2f2;}
</style>

<br>
<br>

# Practice problems **with solutions**

These are practice problems for Week 6.

- [Simple proofs](#simple-proofs)
- [Nested arrows and universals and negations](#nested-arrows-and-universals-and-negations)
- [Existentials and disjunctions and classicality](#existentials-and-disjunctions-and-classicality)
- [Aristotelian syllogisms](#aristotelian-syllogisms)

<p style="page-break-before: always">

<br>

This version has **the solutions** filled in. Please keep in mind that there are multiple good proofs of any one problem.

<br>

## Simple proofs

<br>

*Problem 1*

This problem is good practice with the elimination rule for universals, together with the introduction rule for conjunction and the elimination rule for implication.

```{.ProofChecker .GamutNDPlus submission="none"}
05.01 AxFx, AxGx, Ax((Fx/\Gx)->Hx) :|-: Ha
|∀xFx :assumption
|∀xGx :assumption
|∀x((Fx ∧ Gx) → Hx) :assumption
|Fa :EA1
|Ga :EA2
|Fa/\Ga :I/\4,5
|(Fa/\Ga)->Ha :EA3
|Ha :E->6,7
```

<br>

*Problem 2*

On this problem, think about how to minimally expand your answer to the previous problem:

```{.ProofChecker .GamutNDPlus submission="none"}
05.02 AxFx, AxGx, Ax((Fx/\Gx)->Hx) :|-: AxHx
|∀xFx :assumption
|∀xGx :assumption
|∀x((Fx ∧ Gx) → Hx) :assumption
|Fa :EA1
|Ga :EA2
|Fa/\Ga :I/\4,5
|(Fa/\Ga)->Ha :EA3
|Ha :E->6,7
|AxHx :IA8
```

<br>

*Problem 3*

This problem is only tricky in that first you should think about how to get `Fa/\Gb` and then figure out how to turn this into a proof of `Gb/\Fa`.

```{.ProofChecker .GamutNDPlus submission="none"}
05.03 Rab, AxAy(Rxy->(Fx/\Gy)) :|-: Gb/\Fa
|Rab :assumption
|AxAy(Rxy->(Fx/\Gy)) :assumption
|Ay(Ray->(Fa/\Gy)) :EA2
|Rab->(Fa/\Gb) :EA3
|Fa/\Gb :E->1,4
|Fa :E/\5
|Gb :E/\5
|Gb/\Fa :I/\6,7
```

<br>

*Problem 4*

The intuition behind this problem should be clear: first go from `Rab` and the third premise to `Fa/\Gb` and then `Fa`; second go from `Rab` and the second premise to `Rba` and repeat the first step with the roles of `a,b` reversed to get `Ga`; and third put these two things together with conjunction introduction.

```{.ProofChecker .GamutNDPlus submission="none"}
05.04 Rab, AxAy(Rxy->Ryx), AxAy(Rxy->(Fx/\Gy)) :|-: Fa/\Ga
|Rab :assumption
|AxAy(Rxy->Ryx) :assumption
|AxAy(Rxy->(Fx/\Gy)) :assumption
|Ay(Ray->Rya) :EA2
|Rab->Rba :EA4
|Rba :E->1,5
|Ay(Ray->(Fa/\Gy)) :EA3
|Rab->(Fa/\Gb) :EA7
|Fa/\Gb :E->1,8
|Fa :E/\9
|Ay(Rby->(Fb/\Gy)) :EA3
|Rba->(Fb/\Ga) :EA11
|Fb/\Ga :E->6,12
|Ga :E/\13
|Fa/\Ga :I/\10,14
```

<br>

*Problem 5*

This one is challenging only in that you need to "start from the bottom" and realize that to get `AyFy` you'll have to get `Fb` for some new constant `b`. Then work at the top of your proof to use the elimination rule for universal to get `Fb`.

```{.ProofChecker .GamutNDPlus submission="none"}
05.05 AxAy((Fx/\Rxy)->Fy), AyRay, Fa :|-: AyFy
|AxAy((Fx/\Rxy)->Fy) :assumption
|AyRay :assumption
|Fa :assumption
|Ay((Fa/\Ray)->Fy) :EA1
|(Fa/\Rab)->Fb :EA4
|Rab :EA2
|Fa/\Rab :I/\3,6
|Fb :E->5,7
|AyFy :IA8
```


<br>

<br>

## Nested arrows and universals and negations


<br>

*Problem 6*

For this problem, just take your solution to Problem 5 and try to transform it, following the schema in the video which shows how to transform a proof of $\phi\rightarrow \psi$ into a proof of the contrapositive $\neg \psi\rightarrow \neg \phi$:

<video controls width="700" src="https://logic-teaching.github.io/pred/vid/contrapositive-transform.mp4"/> </video>

<br>

```{.ProofChecker .GamutNDPlus submission="none"}
05.06  AxAy((Fx/\Rxy)->Fy), AyRay, ~AyFy :|-: ~Fa
|AxAy((Fx/\Rxy)->Fy) :assumption
|AyRay :assumption
|~AyFy :assumption
| Fa :assumption
| Ay((Fa/\Ray)->Fy) :EA1
| (Fa/\Rab)->Fb :EA5
| Rab :EA2
| Fa/\Rab :I/\4,7
| Fb :E->6,8
| AyFy :IA9
| ⊥ :E~3,10
|~Fa :I~4-11
```

<br>





*Problem 7*

On this problem, you need to work from the bottom and realize that to get the conclusion `AxFx->AxHx` you'll need to do an arrow introduction going from `AxFx` down to `AxHx` in a bracket. Then the proof should emulate the proof Barbara from lecture (it is [Example 7 under the introduction rule for universal](https://carnap.io/shared/walsh@g.ucla.edu/book-pred-proofs-with-all-and-arrow.pandoc#the-introduction-rule-for-universal)).

```{.ProofChecker .GamutNDPlus submission="none"}
05.07 Ax(Fx->Gx), Ax(Gx->Hx) :|-: AxFx->AxHx
|Ax(Fx->Gx) :assumption
|Ax(Gx->Hx) :assumption
| AxFx :assumption
| Fb :EA3
| Fb->Gb :EA1
| Gb :E->4,5
| Gb->Hb :EA2
| Hb :E->6,7
| AxHx :IA8
|AxFx->AxHx :I->3-9
```

<br>

*Problem 8*

On this problem, you need to work from the bottom and realize that to get the conclusion `Ax(Gx->(Fx->Hx))` you will need to get `(Ga->(Fa->Ha))` for some new constant `a`. Then to get this, you'll have to work from the bottom and think about doing two arrow introductions to get this line. This will result in nested brackets. For the bigger outer bracket, just use one space when inputting into the proof-checker; for the smaller inner bracket, use two spaces when inputting into the proof-checker.

```{.ProofChecker .GamutNDPlus submission="none"}
05.08 Ax(Fx->(Gx->Hx)) :|-: Ax(Gx->(Fx->Hx))
|Ax(Fx->(Gx->Hx)) :assumption
| Ga :assumption
|  Fa :assumption
|  Fa->(Ga->Ha) :EA1
|  Ga->Ha :E->3,4
|  Ha :E->2,5
| Fa->Ha :I->3-6
|Ga->(Fa->Ha) :I->2-7
|Ax(Gx->(Fx->Hx)) :IA8
```

<br>

*Problem 9*


On this next problem, to pump intuition think of $Rxy$ as $x<y$ on numbers:

```{.ProofChecker .GamutNDPlus submission="none"}
05.09 AxAyAz((Rxy/\Ryz)->Rxz), Ax~Rxx :|-: Rab->~Rba
|AxAyAz((Rxy/\Ryz)->Rxz) :assumption
|Ax~Rxx :assumption
| Rab :assumption
|  Rba :assumption
|  Rab/\Rba :I/\3,4
|  AyAz((Ray/\Ryz)->Raz) :EA1
|  Az((Rab/\Rbz)->Raz) :EA6
|  (Rab/\Rba)->Raa :EA7
|  Raa :E->5,8
|  ~Raa :EA2
|  ⊥ :E~9,10
| ~Rba :I~4-11
|Rab->~Rba :I->3-12
```



<br>

*Problem 10*

The following is a good example of nested brackets. This problem is closely related to an important building block of the lambda-calculus, namely the so-called S-combinator. The last line of this proof will be an introduction rule for universal, and so first try to get `(Fa->Ga)->(Fa->Ha)` for some constant symbol `a`. Trying to get `(Fa->Ga)->(Fa->Ha)` will involve a nested bracket. You'll introduce the middle arrow at the very end of your proof. The outer biggest bracket will end in `Fa->Ha`, and you'll have to use an inner bracket to go from `Fa` to `Ha`. First consider writing the proof out by hand, working "from the bottom" in the manner just outlined.

```{.ProofChecker .GamutNDPlus submission="none"}
05.10 Ax(Fx->(Gx->Hx)) :|-: Ax((Fx->Gx)->(Fx->Hx))
|Ax(Fx->(Gx->Hx)) :assumption
| Fa->Ga :assumption
|  Fa :assumption
|  Ga :E->2,3
|  Fa->(Ga->Ha) :EA1
|  Ga->Ha :E->3,5
|  Ha :E->4,6
| Fa->Ha :I->3-7
|(Fa->Ga)->(Fa->Ha) :I->2-8
|Ax((Fx->Gx)->(Fx->Hx)) :IA9
```

<br>

## Existentials and disjunctions and classicality

<br>

Please do not attempt these problems until after Lecture 2 this week. We will cover the rules needed to do these problems in Lecture 2.

<br>

*Problem 11*

This is a simple example of introduction of existentials. In thinking through this problem, try to figure out ahead of time whether you are going to do introduction on the `a` or on the `b` first. It is a function of the order in which the two existential quantifiers appear in the conclusion.

```{.ProofChecker .GamutNDPlus submission="none"}
05.11 (Fa/\Ga)/\(Fb/\~Gb) :|-: ExEy((Fx/\Gx)/\(Fy/\~Gy))
|(Fa/\Ga)/\(Fb/\~Gb) :assumption
|Ey((Fa/\Ga)/\(Fy/\~Gy)) :IE1
|ExEy((Fx/\Gx)/\(Fy/\~Gy)) :IE2
```

<br>

*Problem 12*

This is a simple example of existential elimination. To apply this rule, you will have to get a line with `Fb->Ha` on it, where `b` is a new constant. To get such a line, you will have to do arrow introduction. First consider writing the proof out by hand, working "from the bottom" in the manner just outlined.


```{.ProofChecker .GamutNDPlus submission="none"}
05.12 Ax(Fx->Gx), Ax(Gx->Ha), ExFx :|-: Ha
|Ax(Fx->Gx) :assumption
|Ax(Gx->Ha) :assumption
|ExFx :assumption
| Fb :assumption
| Fb->Gb :EA1
| Gb :E->4,5
| Gb->Ha :EA2
| Ha :E->6,7
|Fb->Ha :I->4-8
|Ha :EE3,9
```

<br>

*Problem 13*

This is one-half of one of the DeMorgan laws for the quantifiers. Again, starting from the bottom, the last step will be an introduction of universal, which will require you to prove `~Fa` for some new constant `a`. Doing that will require you to introduce a negation, that is to go from `Fa` to falsum inside a bracket. Again, consider writing the proof out by hand, working "from the bottom" in the manner just outlined.


```{.ProofChecker .GamutNDPlus submission="none"}
05.13 ~ExFx :|-: Ax~Fx
|~ExFx :assumption
| Fa :assumption
| ExFx :IE2
| ⊥ :E~1,3
|~Fa :I~2-4
|Ax~Fx :IA5
```

<br>

*Problem 14*

This is the other half of it this instance of DeMorgan. Again, consider writing the proof out by hand, working "from the bottom." The justification for the last line `~ExFx` will be introduction of negation. Hence, you have to from `ExFx` to falsum inside a bracket. Since `ExFx` is going to be at the top of your bracket, you need to build an arrow of the form `Fa->. . . ` where you insert the bottom of your bracket into the . . . .

```{.ProofChecker .GamutNDPlus submission="none"}
05.14 Ax~Fx :|-: ~ExFx
|Ax~Fx :assumption
| ExFx :assumption
|  Fa :assumption
|  ~Fa :EA1
|  ⊥ :E~3,4
| Fa->⊥ :I->3-5
| ⊥ :EE2,6
|~ExFx :I~2-7
```

<br>

*Problem 15*

For this, use the previous problem and the proof-transformation method discussed in contrapositive in Problem 6.

```{.ProofChecker .GamutNDPlus submission="none"}
05.15 ExFx :|-: ~Ax~Fx
|ExFx :assumption
| Ax~Fx :assumption
|  ExFx :assumption
|   Fa :assumption
|   ~Fa :EA2
|   ⊥ :E~4,5
|  Fa->⊥ :I->4-6
|  ⊥ :EE1,7
| ~ExFx :I~3-8
| ⊥ :E~1,9
|~Ax~Fx :I~2-10
```

<br>

## Aristotelian syllogisms

<br>

Please do not attempt these problems until after Lecture 2 this week. We will cover the rules needed to do these problems in Lecture 2.

<br>

*Problem 16 (Cesare)*

```{.ProofChecker .GamutNDPlus submission="none"}
05.16 ~Ex(Fx/\Gx), Ax(Hx->Gx) :|-: ~Ex(Hx/\Fx)
|~Ex(Fx/\Gx) :assumption
|Ax(Hx->Gx) :assumption
|~Ex(Gx/\Fx) :CV2 1
|~Ex(Hx/\Fx) :Ce 2,3
```

<br>

*Problem 17 (Camestres)*


```{.ProofChecker .GamutNDPlus submission="none"}
05.17 Ax(Fx->Gx), ~Ex(Hx/\Gx) :|-: ~Ex(Hx/\Fx)
|Ax(Fx->Gx) :assumption
|~Ex(Hx/\Gx) :assumption
|~Ex(Gx/\Hx) :CV2 2
|~Ex(Fx/\Hx) :Ce 1,3
|~Ex(Hx/\Fx) :CV2 4
```

<br>

*Problem 18 (Festino)*


```{.ProofChecker .GamutNDPlus submission="none"}
05.18 ~Ex(Fx/\Gx), Ex(Hx/\Gx) :|-: Ex(Hx/\~Fx)
|~Ex(Fx/\Gx) :assumption
|Ex(Hx/\Gx) :assumption
|~Ex(Gx/\Fx) :CV2 1
|Ex(Hx/\~Fx) :Fe 3,2
```

<br>

*Problem 19 (Baroco)*

```{.ProofChecker .GamutNDPlus submission="none"}
05.19 Ax(Fx->Gx), Ex(Hx/\~Gx) :|-: Ex(Hx/\~Fx)
|Ax(Fx->Gx) :assumption
|Ex(Hx/\~Gx) :assumption
| ~Ex(Hx/\~Fx) :assumption
| Ax(Hx->~~Fx) :CV3 3
|  Hc :assumption
|  Hc->~~Fc :EA4
|  ~~Fc :E->5,6
|  Fc :~~7
| Hc->Fc :I->5-8
| Ax(Hx->Fx) :IA9
| Ex(~Gx/\Hx) :CV1 2
| Ex(~Gx/\Fx) :Da 10,11
| Ex(~Gx/\Gx) :Da 1,12
|  ~Ga/\Ga :assumption
|  ~Ga :E/\14
|  Ga :E/\14
|  ⊥ :E~15,16
| (~Ga/\Ga)->⊥ :I->14-17
| ⊥ :EE13,18
|~~Ex(Hx/\~Fx) :I~3-19
|Ex(Hx/\~Fx) :~~20
```


<br>

These are practice problems written by Sean Walsh. They are run on [carnap.io](http://www.carnap.io).[^5]

[^5]: which is:

<br>
